/** Declaration file generated by dts-gen */

export = gologin;

declare class gologin {
    constructor(...args: any[]);

    checkBrowser(...args: any[]): void;

    checkPortAvailable(...args: any[]): void;

    clearProfileFiles(...args: any[]): void;

    commitProfile(...args: any[]): void;

    convertPreferences(...args: any[]): void;

    create(...args: any[]): void;

    createBrowserExtension(...args: any[]): void;

    createStartup(...args: any[]): void;

    createStartupAndSpawnBrowser(...args: any[]): void;

    delete(...args: any[]): void;

    emptyProfile(...args: any[]): void;

    emptyProfileFolder(...args: any[]): void;

    extractProfile(...args: any[]): void;

    getAvailableFonts(...args: any[]): void;

    getCookies(...args: any[]): void;

    getGeolocationParams(...args: any[]): void;

    getNewFingerPrint(...args: any[]): void;

    getProfile(...args: any[]): void;

    getProfileDataToUpdate(...args: any[]): void;

    getProfileS3(...args: any[]): void;

    getRandomFingerprint(...args: any[]): void;

    getRandomInt(...args: any[]): void;

    getRandomPort(...args: any[]): void;

    getTimeZone(...args: any[]): void;

    getTimezoneWithSocks(...args: any[]): void;

    getToken(...args: any[]): void;

    getViewPort(...args: any[]): void;

    orbitaExtensionPath(...args: any[]): void;

    postCookies(...args: any[]): void;

    postFile(...args: any[]): void;

    profileExists(...args: any[]): void;

    profilePath(...args: any[]): void;

    profiles(...args: any[]): void;

    sanitizeProfile(...args: any[]): void;

    setActive(...args: any[]): void;

    setProfileId(...args: any[]): void;

    spawnArguments(...args: any[]): void;

    spawnBrowser(...args: any[]): void;

    start(...args: any[]): Promise<{ status: string, wsUrl: string }>;

    startLocal(...args: any[]): void;

    startRemote(...args: any[]): void;

    stop(...args: any[]): void;

    stopAndCommit(...args: any[]): void;

    stopBrowser(...args: any[]): void;

    stopLocal(...args: any[]): void;

    stopRemote(...args: any[]): void;

    update(...args: any[]): void;

    uploadProfileCookiesToServer(...args: any[]): void;

    waitDebuggingUrl(...args: any[]): void;

    writeCookiesToFile(...args: any[]): void;

}

